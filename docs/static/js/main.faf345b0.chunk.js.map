{"version":3,"sources":["components/Color.js","components/ImagePicker.js","components/TextArea.js","utils.js","components/Heading.js","components/Toolbar.js","components/Input.js","components/SettingSection.js","App.js","serviceWorker.js","index.js"],"names":["Color","props","react_default","a","createElement","className","index_es","wrap","style","background","default","label","ImagePicker","type","FileUpload","TextArea","Object","assign","multiline","translate","content","en","keys","inputs","header","component","json","text","TextField","id","placeholder","textarea","info","radio","ChoiceList","options","value","checkbox","Checkbox","select","Select","range","RangeSlider","min","max","step","unit","color","image_picker","Toolbar","_ref","dragging","Section","react_beautiful_dnd_esm","droppableId","direction","provided","ref","innerRef","droppableProps","draggableId","index","draggableProps","dragHandleProps","subdued","map","input","key","split","part","charAt","toUpperCase","slice","join","Input","settings","objectSpread","helpText","choices","selected","DynamicComponent","concat","originalIndex","parseInt","SettingSection","section","name","sectioned","length","snapshot","isDraggingOver","title","status","temp","subsectionIndex","subsection","push","toConsumableArray","splitByHeaders","headers","setting","components_Input","App","state","tempJson","settingsSchema","onDragUpdate","_this","setState","createUniqueId","inputUniqueProperty","destinationSectionIndex","instances","arguments","undefined","needle","matched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","onDragEnd","result","destination","source","sourceSectionIndex","findIndex","splice","desinationIndex","outputSchema","updateDimensions","document","querySelector","maxHeight","window","innerHeight","componentWillUnmount","removeEventListener","output","JSON","stringify","componentDidMount","addEventListener","handleChange","parse","error","this","fullWidth","separator","components_Toolbar","secondary","components_SettingSection","react_stickynode_default","enabled","top","bottomBoundary","labelHidden","onChange","external","url","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faf345b0.chunk.js","sourcesContent":["import React from 'react';\nimport {Stack} from '@shopify/polaris';\n\nfunction Color(props) {\n  return (\n    <div className=\"color-container\">\n      <Stack wrap={false}>\n        <div style={{background: props.default}} className=\"color-preview\"></div>\n        <p>{props.label}</p>\n      </Stack>\n    </div>\n  )\n}\n\nexport default Color;\n","import React from 'react';\nimport {DropZone} from '@shopify/polaris';\n\nfunction ImagePicker(props) {\n  return (\n    <DropZone label={props.label} type=\"image\">\n      <DropZone.FileUpload />\n    </DropZone>\n  )\n}\n\nexport default ImagePicker;\n","import React from 'react';\nimport {TextField} from '@shopify/polaris';\n\nfunction TextArea(props) {\n  return (\n    <TextField {...props} multiline />\n  )\n}\n\nexport default TextArea;\n","import Color from './components/Color';\nimport Heading from './components/Heading';\nimport ImagePicker from './components/ImagePicker';\nimport TextArea from './components/TextArea';\nimport {\n  TextField,\n  ChoiceList,\n  Checkbox,\n  Select,\n  RangeSlider,\n} from '@shopify/polaris';\n\nconst prettify = (str) => {\n  return str.split('_').map((part) => {\n    return part.charAt(0).toUpperCase() + part.slice(1);\n  }).join(' ');\n};\n\nconst splitByHeaders = (section) => {\n  const split = [];\n  let temp = [];\n  for (let subsectionIndex in section) {\n    const subsection = {...section[subsectionIndex]}\n\n    // Settings are broken up into sections,\n    // we need to keep track of their original index\n    // so we can rearrange later\n    subsection.originalIndex = subsectionIndex\n\n    if (subsection.type === 'header' && temp.length) {\n      // Push what we have so far and reset temp\n      split.push([...temp]);\n      temp = [];\n    }\n    temp.push(subsection);\n  }\n  split.push([...temp]);\n  return split;\n};\n\n// Label might be a string or a hash of translations\nconst translate = (content) => {\n  if (typeof content === 'object') {\n    // Pull out english if it's available otherwise the first translation\n    return content.en || content[Object.keys(content)[0]];\n  } else {\n    return content;\n  }\n};\n\nconst inputs = {\n  header: {\n    component: Heading,\n    json: {\n      type: 'header',\n      content: 'Heading Example',\n    },\n  },\n  text: {\n    component: TextField,\n    json: {\n      type: 'text',\n      id: 'text_example',\n      default: '',\n      placeholder: 'placeholder',\n      label: 'Text Example',\n    },\n  },\n  textarea: {\n    component: TextArea,\n    json: {\n      type: 'textarea',\n      id: 'textarea_example',\n      label: 'Textarea Example',\n      info: '',\n    },\n  },\n  radio: {\n    component: ChoiceList,\n    json: {\n      type: 'radio',\n      id: 'radio_example',\n      label: 'Radio Example',\n      options: [\n        {value: 'one', label: 'Radio one'},\n        {value: 'two', label: 'Radio two'},\n      ],\n      default: 'two',\n    },\n  },\n  checkbox: {\n    component: Checkbox,\n    json: {\n      type: 'checkbox',\n      id: 'checkbox_example',\n      label: 'Checkbox Example',\n      default: false,\n      info: 'Optional information about this checkbox',\n    },\n  },\n  select: {\n    component: Select,\n    json: {\n      type: 'select',\n      id: 'select_example',\n      label: 'Select Example',\n      options: [\n        {value: 'Option 1', label: 'Option 1'},\n        {value: 'Option 2', label: 'Option 2'},\n      ],\n      default: 'Option 2',\n      info: 'Optional information about this select',\n    },\n  },\n  range: {\n    component: RangeSlider,\n    json: {\n      type: 'range',\n      id: 'range_example',\n      min: 12,\n      max: 18,\n      step: 1,\n      unit: 'px',\n      label: 'Range Example',\n      default: 16,\n      info: 'Optional information about this range',\n    },\n  },\n  color: {\n    component: Color,\n    json: {\n      type: 'color',\n      label: 'Colour Example',\n      id: 'color_example',\n      default: '#333333',\n    },\n  },\n  image_picker: {\n    component: ImagePicker,\n    json: {\n      type: 'image_picker',\n      id: 'image_picker_example',\n      label: 'Image Picker Example',\n    },\n  },\n};\n\nexport {splitByHeaders, translate, inputs, prettify};\n","import React from 'react';\nimport {Subheading} from '@shopify/polaris';\n\nfunction Heading(props) {\n  return (\n    <Subheading>{props.content}</Subheading>\n  )\n}\n\nexport default Heading;\n","import React from 'react';\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\nimport {inputs, prettify} from '../utils';\nimport {Card, Stack} from '@shopify/polaris';\n\nconst Toolbar = ({dragging}) => (\n  <div id=\"toolbar\">\n  <Card>\n    <Card.Section>\n    <Droppable droppableId=\"toolbar\" direction=\"horizontal\">\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.droppableProps}>\n          <Stack>\n            <Draggable draggableId=\"section\" index={0}>\n              {(provided) => {\n                return (\n                  <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className={dragging === 'section' ? 'dragging' : 'lock'}>\n                    <Card subdued>Section</Card>\n                  </div>\n                )\n              }}\n            </Draggable>\n          { Object.keys(inputs).map((input, index) => {\n            if (inputs[input].json) {\n              return (\n                <Draggable draggableId={input} index={index} key={input}>\n                  {provided => {\n                    return (\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className={dragging === input ? 'dragging' : 'lock'}>\n                        <Card subdued>{prettify(input)}</Card>\n                      </div>\n                    )\n                  }}\n                </Draggable>\n              )\n            }\n          })}\n          </Stack>\n        </div>\n      )}\n      </Droppable>\n    </Card.Section>\n  </Card>\n  </div>\n);\n\nexport default Toolbar;\n","import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd';\nimport {translate, inputs} from '../utils';\n\nfunction Input(props) {\n  const settings = {...props};\n  settings.value = settings.default;\n  settings.helpText = translate(settings.info);\n  settings.label = translate(settings.label);\n  settings.content = translate(settings.content);\n  settings.choices = settings.options;\n  settings.selected = settings.default;\n\n  if (!inputs[settings.type]) {\n    return <p><strong>{settings.type}</strong> not supported yet!</p>\n  }\n\n  const DynamicComponent = inputs[settings.type].component;\n\n  return (\n    <Draggable draggableId={`${settings.id}-${settings.originalIndex}`} index={parseInt(settings.originalIndex, 10)}>\n      {(provided) => {\n        return (\n          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className=\"draggable\">\n            { DynamicComponent ? <DynamicComponent {...settings} /> : <p><strong>{settings.type}</strong> not supported yet!</p> }\n          </div>\n        )\n      }}\n    </Draggable>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\nimport {inputs, prettify, translate, splitByHeaders} from '../utils';\nimport {Card, Stack, FormLayout, Banner} from '@shopify/polaris';\nimport Input from './Input';\n\nconst SettingSection = ({section}) => (\n\n  <div key={translate(section.name)} className=\"setting-section\">\n    <Card.Section>\n      <p>{translate(section.name)}</p>\n    </Card.Section>\n    <Card sectioned={section.settings.length} subdued>\n      <Droppable droppableId={`${translate(section.name)}`}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef} {...provided.droppableProps} className={`preview ${snapshot.isDraggingOver ? 'card-dragging-over' : ''}`}>\n\n            {\n              // If there are no settings yet display a message\n              !section.settings.length && (\n                <Banner\n                  title=\"Drag components from above and drop them here\"\n                  status=\"info\"\n                >\n                  <p>Or directly edit the JSON</p>\n                </Banner>\n              )\n            }\n\n            {\n              section.settings && splitByHeaders(section.settings).map((headers) => {\n                // Handle empty sections\n                if (!headers[0]) {\n                  return null;\n                }\n\n                const id = translate(section.name) + (headers[0].id || translate(headers[0].content) || translate(headers[0].label));\n                return (\n                  <Card sectioned key={id} subdued={snapshot.isDraggingOver}>\n                    <FormLayout>\n                      { headers && headers.map((setting) => {\n                          // Each input needs a unique ID for drag & drop\n                          setting.id = setting.id || id + translate(setting.content);\n                          return <Input {...setting} key={setting.id} />\n                        })\n                      }\n                      {provided.placeholder}\n                    </FormLayout>\n                  </Card>\n                )\n              })\n            }\n          </div>\n        )}\n      </Droppable>\n    </Card>\n  </div>\n);\n\nexport default SettingSection;\n","import React, {Component} from 'react';\nimport './App.css';\nimport {AppProvider, Page, Card, Layout, TextField, Stack, Badge, FooterHelp, Link} from '@shopify/polaris';\nimport Sticky from 'react-stickynode';\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\nimport Toolbar from './components/Toolbar';\nimport SettingSection from './components/SettingSection';\nimport {translate, inputs } from './utils';\n\nclass App extends Component {\n  state = {\n    tempJson: '',\n    settingsSchema: [{name: 'Section 1', settings: []}],\n    dragging: null,\n  };\n\n  onDragUpdate = ({draggableId}) => {\n    this.setState({dragging: draggableId});\n  };\n\n  // Each input needs a unique ID for Shopify themes and drag & drop\n  createUniqueId = (input, inputUniqueProperty, destinationSectionIndex, instances=0) => {\n    const id = input[inputUniqueProperty];\n    const needle = instances ? `${id}${inputUniqueProperty === 'id' ? '_' : ' '}${instances}` : id;\n    let matched = false;\n\n    for (let section in this.state.settingsSchema) {\n      for (let setting of this.state.settingsSchema[section].settings) {\n        if (setting.type === input.type && setting[inputUniqueProperty] === needle) {\n          matched = true;\n        }\n      }\n    }\n\n    if (!matched) {\n      return needle;\n    }\n\n    return this.createUniqueId(input, inputUniqueProperty, destinationSectionIndex, ++instances);\n  };\n\n  onDragEnd = (result) => {\n    const {destination, source, draggableId } = result;\n\n    // Ignore toolbar components dropped elsewhere\n    if (source.droppableId === 'toolbar' && !destination) {\n      return;\n    }\n\n    // Ignore components dropped onto the toolbar\n    if (destination && destination.droppableId === 'toolbar') {\n      return;\n    }\n\n    // Clone the settings\n    const settings = [...this.state.settingsSchema];\n\n    // Which section is our source in?\n    const sourceSectionIndex = this.state.settingsSchema.findIndex((setting) => {\n      return translate(setting.name) === source.droppableId.split('_')[0];\n    });\n\n    // Allow items to be removed\n    if (!destination) {\n      settings[sourceSectionIndex].settings.splice(source.index, 1);\n      this.setState({settingsSchema: settings});\n      return;\n    }\n\n    // Which section is our source going to?\n    const destinationSectionIndex = this.state.settingsSchema.findIndex((setting) => {\n      return translate(setting.name) === destination.droppableId.split('_')[0];\n    });\n\n    const desinationIndex = destination.index;\n    let input;\n\n    if (source.droppableId === 'toolbar') {\n      // handle individual sections\n      if (result.draggableId === 'section') {\n        settings.push({name: `Section ${settings.length + 1}`, settings: []});\n        this.setState({settingsSchema: settings}, () => this.outputSchema());\n        return;\n      }\n      input = {...inputs[draggableId].json};\n      const inputUniqueProperty = (input.type === 'header') ? 'content' : 'id';\n      input[inputUniqueProperty] = this.createUniqueId(input, inputUniqueProperty, destinationSectionIndex);\n    } else {\n      // Reference the input, move it\n      input = settings[sourceSectionIndex].settings[source.index];\n      settings[sourceSectionIndex].settings.splice(source.index, 1);\n    }\n\n    settings[destinationSectionIndex].settings.splice(desinationIndex, 0, input);\n    this.setState({settingsSchema: settings});\n\n    this.outputSchema();\n  };\n\n  updateDimensions = () => {\n    if (document.querySelector('#TextField1')) {\n      document.querySelector('#TextField1').style.maxHeight = window.innerHeight - 170 + 'px';\n    }\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.updateDimensions);\n  };\n\n  outputSchema = () => {\n    const output = [...this.state.settingsSchema];\n    this.setState({tempJson: JSON.stringify(output, null, 4)});\n  };\n\n  componentDidMount = () => {\n    window.addEventListener('resize', this.updateDimensions);\n    this.updateDimensions();\n    this.outputSchema();\n  };\n\n  handleChange = (tempJson) => {\n    // Handle empty panel\n    if (tempJson === '') {\n      tempJson = JSON.stringify([{name: 'Section 1', settings: []}], null, 4);\n    }\n    this.setState({tempJson})\n\n    try {\n      const settingsSchema = JSON.parse(tempJson);\n      this.setState({settingsSchema});\n    } catch (error) {\n      // Waiting for valid JSON\n    }\n\n  };\n\n  render() {\n    return (\n      <AppProvider>\n        <DragDropContext onDragEnd={this.onDragEnd} onDragUpdate={this.onDragUpdate}>\n          <Page fullWidth title=\"Theme Settings Builder for Shopify\" separator>\n            <Toolbar dragging={this.state.dragging} />\n            <Layout>\n              <Layout.Section secondary>\n              <Card>\n                {\n                  this.state.settingsSchema.map && this.state.settingsSchema.map((section) => {\n                    // Some theme settings contain theme_info, we can ignore this\n                    if (section.name !== 'theme_info') {\n                      return <SettingSection section={section} key={translate(section.name)} />\n                    }\n                  })\n                }\n              </Card>\n              </Layout.Section>\n              <Layout.Section secondary>\n                <Sticky enabled={true} top={0} bottomBoundary={0}>\n                  <Card>\n                    <Card.Section>\n                      <TextField\n                        labelHidden=\"true\"\n                        placeholder=\"json\"\n                        onChange={this.handleChange}\n                        value={this.state.tempJson}\n                        multiline\n                      />\n                    </Card.Section>\n                  </Card>\n                </Sticky>\n              </Layout.Section>\n            </Layout>\n            <FooterHelp>\n              Learn more about{' '}\n              <Link external url=\"https://help.shopify.com/en/themes/development/theme-editor/settings-schema\">\n                configuring theme settings\n              </Link>\n              .\n              Submit{' '}\n              <Link external url=\"https://github.com/scottdixon/shopify-settings-gui/issues\">bugs & feature requests</Link>.\n            </FooterHelp>\n          </Page>\n        </DragDropContext>\n      </AppProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@shopify/polaris/styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}