{"version":3,"sources":["components/ImagePicker.js","components/TextArea.js","utils.js","components/Heading.js","components/Color.js","components/Toolbar.js","components/Input.js","components/SettingSection.js","App.js","serviceWorker.js","index.js"],"names":["ImagePicker","props","react_default","a","createElement","index_es","label","type","FileUpload","TextArea","Object","assign","multiline","translate","content","en","keys","inputs","header","component","json","color","wrap","style","background","default","borderRadius","height","width","id","text","TextField","placeholder","textarea","info","radio","ChoiceList","options","value","checkbox","Checkbox","select","Select","range","RangeSlider","min","max","step","unit","image_picker","Toolbar","_ref","dragging","Section","react_beautiful_dnd_esm","droppableId","direction","provided","ref","innerRef","droppableProps","draggableId","index","draggableProps","dragHandleProps","className","subdued","map","input","key","split","part","charAt","toUpperCase","slice","join","Input","settings","objectSpread","helpText","choices","selected","DynamicComponent","concat","originalIndex","parseInt","SettingSection","section","name","sectioned","snapshot","isDraggingOver","length","temp","subsectionIndex","subsection","push","toConsumableArray","splitByHeaders","headers","setting","components_Input","App","state","tempJson","settingsSchema","onDragUpdate","_this","setState","createUniqueId","inputUniqueProperty","destinationSectionIndex","instances","arguments","undefined","needle","matched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","onDragEnd","result","destination","source","sourceSectionIndex","findIndex","splice","desinationIndex","outputSchema","updateDimensions","document","querySelector","maxHeight","window","innerHeight","componentWillUnmount","removeEventListener","output","JSON","stringify","componentDidMount","addEventListener","handleChange","parse","error","this","fullWidth","components_Toolbar","secondary","components_SettingSection","labelHidden","onChange","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73e55a55.chunk.js","sourcesContent":["import React from 'react';\nimport {DropZone} from '@shopify/polaris';\n\nfunction ImagePicker(props) {\n  return (\n    <DropZone label={props.label} type=\"image\">\n      <DropZone.FileUpload />\n    </DropZone>\n  )\n}\n\nexport default ImagePicker;\n","import React from 'react';\nimport {TextField} from '@shopify/polaris';\n\nfunction TextArea(props) {\n  return (\n    <TextField {...props} multiline />\n  )\n}\n\nexport default TextArea;\n","import Color from './components/Color';\nimport Heading from './components/Heading';\nimport ImagePicker from './components/ImagePicker';\nimport TextArea from './components/TextArea';\nimport {\n  TextField,\n  ChoiceList,\n  Checkbox,\n  Select,\n  RangeSlider,\n} from '@shopify/polaris';\n\nconst prettify = (str) => {\n  return str.split('_').map((part) => {\n    return part.charAt(0).toUpperCase() + part.slice(1);\n  }).join(' ');\n};\n\nconst splitByHeaders = (section) => {\n  const split = [];\n  let temp = [];\n  for (let subsectionIndex in section) {\n    const subsection = {...section[subsectionIndex]}\n\n    // Settings are broken up into sections,\n    // we need to keep track of their original index\n    // so we can rearrange later\n    subsection.originalIndex = subsectionIndex\n\n    if (subsection.type === 'header' && temp.length) {\n      // Push what we have so far and reset temp\n      split.push([...temp]);\n      temp = [];\n    }\n    temp.push(subsection);\n  }\n  split.push([...temp]);\n  return split;\n};\n\n// Label might be a string or a hash of translations\nconst translate = (content) => {\n  if (typeof content === 'object') {\n    // Pull out english if it's available otherwise the first translation\n    return content.en || content[Object.keys(content)[0]];\n  } else {\n    return content;\n  }\n};\n\nconst inputs = {\n  header: {\n    component: Heading,\n    json: {\n      type: 'header',\n      content: 'Heading Example',\n    },\n  },\n  color: {\n    component: Color,\n    json: {\n      type: 'color',\n      label: 'Colour Example',\n      id: 'color_example',\n      default: '#333333',\n    },\n  },\n  text: {\n    component: TextField,\n    json: {\n      type: 'text',\n      id: 'text_example',\n      default: '',\n      placeholder: 'placeholder',\n      label: 'Text Example',\n    },\n  },\n  textarea: {\n    component: TextArea,\n    json: {\n      type: 'textarea',\n      id: 'textarea_example',\n      label: 'Textarea Example',\n      info: '',\n    },\n  },\n  radio: {\n    component: ChoiceList,\n    json: {\n      type: 'radio',\n      id: 'radio_example',\n      label: 'Radio Example',\n      options: [\n        {value: 'one', label: 'Radio one'},\n        {value: 'two', label: 'Radio two'},\n      ],\n      default: 'two',\n    },\n  },\n  checkbox: {\n    component: Checkbox,\n    json: {\n      type: 'checkbox',\n      id: 'checkbox_example',\n      label: 'Checkbox Example',\n      default: false,\n      info: 'Optional information about this checkbox',\n    },\n  },\n  select: {\n    component: Select,\n    json: {\n      type: 'select',\n      id: 'select_example',\n      label: 'Select Example',\n      options: [\n        {value: 'Option 1', label: 'Option 1'},\n        {value: 'Option 2', label: 'Option 2'},\n      ],\n      default: 'Option 2',\n      info: 'Optional information about this select',\n    },\n  },\n  range: {\n    component: RangeSlider,\n    json: {\n      type: 'range',\n      id: 'range_example',\n      min: 12,\n      max: 18,\n      step: 1,\n      unit: 'px',\n      label: 'Range Example',\n      default: 16,\n      info: 'Optional information about this range',\n    },\n  },\n  image_picker: {\n    component: ImagePicker,\n    json: {\n      type: 'image_picker',\n      id: 'image_picker_example',\n      label: 'Image Picker Example',\n    },\n  },\n};\n\nexport {splitByHeaders, translate, inputs, prettify};\n","import React from 'react';\nimport {Subheading} from '@shopify/polaris';\n\nfunction Heading(props) {\n  return (\n    <Subheading>{props.content}</Subheading>\n  )\n}\n\nexport default Heading;\n","import React from 'react';\nimport {Stack} from '@shopify/polaris';\n\nfunction Color(props) {\n  return (\n    <Stack wrap={false}>\n      <div style={{background: props.default, borderRadius: '3px', height: '19px', width: '38px'}}></div>\n      <p>{props.label}</p>\n    </Stack>\n  )\n}\n\nexport default Color;\n","import React from 'react';\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\nimport {inputs, prettify} from '../utils';\nimport {Card, Stack} from '@shopify/polaris';\n\nconst Toolbar = ({dragging}) => (\n  <Card>\n    <Card.Section>\n    <Droppable droppableId=\"toolbar\" direction=\"horizontal\">\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.droppableProps} id=\"toolbar\">\n          <Stack>\n            <Draggable draggableId=\"section\" index={0}>\n              {(provided) => {\n                return (\n                  <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className={dragging === 'section' ? 'dragging' : 'lock'}>\n                    <Card subdued>Section</Card>\n                  </div>\n                )\n              }}\n            </Draggable>\n          { Object.keys(inputs).map((input, index) => {\n            if (inputs[input].json) {\n              return (\n                <Draggable draggableId={input} index={index} key={input}>\n                  {provided => {\n                    return (\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className={dragging === input ? 'dragging' : 'lock'}>\n                        <Card subdued>{prettify(input)}</Card>\n                      </div>\n                    )\n                  }}\n                </Draggable>\n              )\n            }\n          })}\n          </Stack>\n        </div>\n      )}\n      </Droppable>\n    </Card.Section>\n  </Card>\n);\n\nexport default Toolbar;\n","import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd';\nimport {translate, inputs} from '../utils';\n\nfunction Input(props) {\n  const settings = {...props};\n  settings.value = settings.default;\n  settings.helpText = translate(settings.info);\n  settings.label = translate(settings.label);\n  settings.content = translate(settings.content);\n  settings.choices = settings.options;\n  settings.selected = settings.default;\n\n  const DynamicComponent = inputs[settings.type].component;\n  return (\n    <Draggable draggableId={`${settings.id}-${settings.originalIndex}`} index={parseInt(settings.originalIndex, 10)}>\n      {(provided) => {\n        return (\n          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} className=\"draggable\">\n            { DynamicComponent ? <DynamicComponent {...settings} /> : <p><strong>{settings.type}</strong> not supported yet!</p> }\n          </div>\n        )\n      }}\n    </Draggable>\n  )\n}\n\nexport default Input;\n","import React from 'react';\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\nimport {inputs, prettify, translate, splitByHeaders} from '../utils';\nimport {Card, Stack, FormLayout} from '@shopify/polaris';\nimport Input from './Input';\n\nconst SettingSection = ({section}) => (\n\n  <div key={translate(section.name)}>\n    <Card.Section>\n      <p>{ translate(section.name) }</p>\n    </Card.Section>\n    <Card sectioned subdued>\n      <Droppable droppableId={`${translate(section.name)}`}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef} {...provided.droppableProps} className={snapshot.isDraggingOver ? 'card-dragging-over preview' : 'preview'}>\n\n            {\n              // If there are no settings yet display a message\n              !section.settings.length && <p className=\"drop-message\">Drop settings here!</p>\n            }\n\n            {\n              section.settings && splitByHeaders(section.settings).map((headers) => {\n                // Handle empty sections\n                if (!headers[0]) {\n                  return null;\n                }\n\n                const id = section.name + (headers[0].id || translate(headers[0].content) || translate(headers[0].label));\n                return (\n                  <Card sectioned key={id} subdued={snapshot.isDraggingOver}>\n                    <FormLayout>\n                      { headers && headers.map((setting) => {\n                          // Each input needs a unique ID for drag & drop\n                          setting.id = setting.id || id + translate(setting.content);\n                          return <Input {...setting} key={setting.id} />\n                        })\n                      }\n                      {provided.placeholder}\n                    </FormLayout>\n                  </Card>\n                )\n              })\n            }\n          </div>\n        )}\n      </Droppable>\n    </Card>\n  </div>\n);\n\nexport default SettingSection;\n","import React, {Component} from 'react';\nimport './App.css';\nimport {AppProvider, Page, Card, Layout, TextField, Stack, Badge} from '@shopify/polaris';\nimport Sticky from 'react-stickynode';\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\nimport Toolbar from './components/Toolbar';\nimport SettingSection from './components/SettingSection';\nimport {translate, inputs } from './utils';\n\nclass App extends Component {\n  state = {\n    tempJson: '',\n    settingsSchema: [{name: 'Section 1', settings: []}],\n    dragging: null,\n  };\n\n  onDragUpdate = ({draggableId}) => {\n    this.setState({dragging: draggableId});\n  };\n\n  // Each input needs a unique ID for Shopify themes and drag & drop\n  createUniqueId = (input, inputUniqueProperty, destinationSectionIndex, instances=0) => {\n    const id = input[inputUniqueProperty];\n    const needle = instances ? `${id}${inputUniqueProperty === 'id' ? '_' : ' '}${instances}` : id;\n    let matched = false;\n\n    for (let section in this.state.settingsSchema) {\n      for (let setting of this.state.settingsSchema[section].settings) {\n        if (setting.type === input.type && setting[inputUniqueProperty] === needle) {\n          matched = true;\n        }\n      }\n    }\n\n    if (!matched) {\n      return needle;\n    }\n\n    return this.createUniqueId(input, inputUniqueProperty, destinationSectionIndex, ++instances);\n  };\n\n  onDragEnd = (result) => {\n    const {destination, source, draggableId } = result;\n\n    // Ignore toolbar components dropped elsewhere\n    if (source.droppableId === 'toolbar' && !destination) {\n      return;\n    }\n\n    // Ignore components dropped onto the toolbar\n    if (destination && destination.droppableId === 'toolbar') {\n      return;\n    }\n\n    // Clone the settings\n    const settings = [...this.state.settingsSchema];\n\n    // Which section is our source in?\n    const sourceSectionIndex = this.state.settingsSchema.findIndex((setting) => {\n      return translate(setting.name) === source.droppableId.split('_')[0];\n    });\n\n    // Allow items to be removed\n    if (!destination) {\n      settings[sourceSectionIndex].settings.splice(source.index, 1);\n      this.setState({settingsSchema: settings});\n      return;\n    }\n\n    // Which section is our source going to?\n    const destinationSectionIndex = this.state.settingsSchema.findIndex((setting) => {\n      return translate(setting.name) === destination.droppableId.split('_')[0];\n    });\n\n    const desinationIndex = destination.index;\n    let input;\n\n    if (source.droppableId === 'toolbar') {\n      // handle individual sections\n      if (result.draggableId === 'section') {\n        settings.push({name: `Section ${settings.length + 1}`, settings: []});\n        this.setState({settingsSchema: settings}, () => this.outputSchema());\n        return;\n      }\n      input = {...inputs[draggableId].json};\n      const inputUniqueProperty = (input.type === 'header') ? 'content' : 'id';\n      input[inputUniqueProperty] = this.createUniqueId(input, inputUniqueProperty, destinationSectionIndex);\n    } else {\n      // Reference the input, move it\n      input = settings[sourceSectionIndex].settings[source.index];\n      settings[sourceSectionIndex].settings.splice(source.index, 1);\n    }\n\n    settings[destinationSectionIndex].settings.splice(desinationIndex, 0, input);\n    this.setState({settingsSchema: settings});\n\n    this.outputSchema();\n  };\n\n  updateDimensions = () => {\n    if (document.querySelector('#TextField1')) {\n      document.querySelector('#TextField1').style.maxHeight = window.innerHeight - 170 + 'px';\n    }\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.updateDimensions);\n  };\n\n  outputSchema = () => {\n    const output = [...this.state.settingsSchema];\n    this.setState({tempJson: JSON.stringify(output, null, 4)});\n  };\n\n  componentDidMount = () => {\n    window.addEventListener('resize', this.updateDimensions);\n    this.updateDimensions();\n    this.outputSchema();\n  };\n\n  handleChange = (tempJson) => {\n    // Handle empty panel\n    if (tempJson === '') {\n      tempJson = JSON.stringify([{name: 'Section 1', settings: []}], null, 4);\n    }\n\n    this.setState({tempJson});\n    try {\n      const settingsSchema = JSON.parse(tempJson);\n      this.setState({settingsSchema});\n    } catch (error) {\n      // Waiting for valid JSON\n    }\n  };\n\n  render() {\n    return (\n      <AppProvider>\n        <DragDropContext onDragEnd={this.onDragEnd} onDragUpdate={this.onDragUpdate}>\n          <Page fullWidth>\n            <Toolbar dragging={this.state.dragging} />\n            <p>&nbsp;</p>\n            <Layout>\n              <Layout.Section secondary>\n              <Card>\n                {\n                  this.state.settingsSchema.map && this.state.settingsSchema.map((section) => {\n                    // Some theme settings contain theme_info, we can ignore this\n                    if (section.name !== 'theme_info') {\n                      return <SettingSection section={section} key={section.name} />\n                    }\n                  })\n                }\n              </Card>\n              </Layout.Section>\n              <Layout.Section secondary>\n                <Card>\n                  <Card.Section>\n                    <TextField\n                      labelHidden=\"true\"\n                      placeholder=\"json\"\n                      onChange={this.handleChange}\n                      value={this.state.tempJson}\n                      multiline\n                    />\n                  </Card.Section>\n                </Card>\n              </Layout.Section>\n            </Layout>\n          </Page>\n        </DragDropContext>\n      </AppProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@shopify/polaris/styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}